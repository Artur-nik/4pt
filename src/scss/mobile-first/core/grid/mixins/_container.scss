@mixin container(   $bp: 'default', 
                    $for: false,
                    $value: true,
                    $custom: true,
                    $lvl:_value($_lvl, 'grid-container')  
) { 
    //* Если в переменной $_lvl, 'grid-container' значение не равно 1 и в миксе значение заданно 1 то увеличиваем лвл до 2
    //* Это требуется чтобы не возникал конфликт при отсутствие placeholder %grid-container-*
    @if $lvl == 1 and _value($_lvl, 'grid-container') != 1 {
        $lvl: 2;
    } 
    @if check($custom) {
        @extend %grid-container-customization;
    }
    @if check($value) {
        @if $bp == 'default' {
            @if $_4pt-var-css { 
                @include _lvl($lvl, $bp, 'grid-container', (
                    max-width: var(--container-size)
                ));
            }
            @else {
                @each $breakpoint in map-keys(map-remove($grid, 'default', 'setting')) {
                    @include _lvl($lvl, $breakpoint, 'grid-container', (
                        max-width: _value($grid, 'container-size', $breakpoint)
                    ));      
                }
            }
        }
        @else {
            @if $_4pt-var-css {
                @include _lvl($lvl, $bp, 'grid-container', (
                    max-width: var(--container-size)
                ));
            }
            @else { 
                @if check($for) {
                    //* 
                    @for $i from index(map-keys(map-remove($grid, 'default', 'setting')),$bp) through length(map-keys(map-remove($grid, 'default', 'setting'))){
                        //* 
                        @include _lvl($lvl, nth(map-keys(map-remove($grid, 'default', 'setting')),$i), 'grid-container', (
                            max-width: _value($grid, 'container-size', nth(map-keys(map-remove($grid, 'default', 'setting')),$i))
                        ));     
                    }
                } 
                @else {
                    @if _value($grid, 'container-size', $bp) and $bp != 'default' {
                        @include _lvl($lvl, $bp, 'grid-container', (
                            max-width: _value($grid, 'container-size', $bp)
                        ));            
                    }                  
                } 
            }    
        }
    }
}